function plotQualityMetrics(metrics, folder, threshold)
if nargin < 2
    folder = './';
end

if nargin < 3
    threshold = NaN(1, length(metrics.metric_names));
end

fig = EasyPlot.figure();

ax_all = EasyPlot.createGridAxes(fig, ceil(length(metrics.metrics)/2), 2,...
    'MarginLeft', 1,...
    'Width', 6,...
    'Height', 3,...
    'MarginBottom', 1);

binwidth = dictionary(...
    'ISI violations', 0.005,...
    'Precence ratio', 0.01,...
    'Amplitude cutoffs', 0.01,...
    'Isolation distance', 1,...
    'Median Amplitude', 1,...
    'D prime', 1,...
    'Nearest-neighbor miss rate', 0.002,...
    'Nearest-neighbor hit rate', 0.01,...
    'L ratio', 0.01);

xlim_low = dictionary(...
    'ISI violations', 0,...
    'Precence ratio', 0.5,...
    'Amplitude cutoffs', 0,...
    'Median Amplitude', 0,...
    'Isolation distance', 0,...
    'D prime', 0,...
    'Nearest-neighbor miss rate', 0,...
    'Nearest-neighbor hit rate', 0,...
    'L ratio', 0);

xlim_high = dictionary(...
    'ISI violations', 0.2,...
    'Precence ratio', 1,...
    'Amplitude cutoffs', 0.5,...
    'Median Amplitude', 50,...
    'Isolation distance', 100,...
    'D prime', 50,...
    'Nearest-neighbor miss rate', 0.05,...
    'Nearest-neighbor hit rate', 1,...
    'L ratio', 0.5);

is_good_label = strcmpi(metrics.labels, 'good');

% remove the extreme values
idx_isi_violations = find(strcmpi(metrics.metric_names, 'ISI violations'));
metrics.metrics{idx_isi_violations}(metrics.metrics{idx_isi_violations} > 3) = NaN; 

idx_l_ratio = find(strcmpi(metrics.metric_names, 'L ratio'));
metrics.metrics{idx_l_ratio}(metrics.metrics{idx_l_ratio} > 3) = NaN;

idx_isolation_distance = find(strcmpi(metrics.metric_names, 'Isolation distance'));
metrics.metrics{idx_isolation_distance}(metrics.metrics{idx_isolation_distance} > xlim_high('Isolation distance')) = xlim_high('Isolation distance');

idx_isolation_distance = find(strcmpi(metrics.metric_names, 'D prime'));
metrics.metrics{idx_isolation_distance}(metrics.metrics{idx_isolation_distance} > xlim_high('D prime')) = xlim_high('D prime');


for k = 1:length(metrics.metrics)
    histogram(ax_all{k}, metrics.metrics{k}, 'BinWidth', binwidth(metrics.metric_names{k}));
    histogram(ax_all{k}, metrics.metrics{k}(is_good_label), 'BinWidth', binwidth(metrics.metric_names{k}));
    title(ax_all{k}, metrics.metric_names{k});
    xline(ax_all{k}, threshold(k), 'k:', 'LineWidth', 2);

    xlim(ax_all{k}, [xlim_low(metrics.metric_names{k}), xlim_high(metrics.metric_names{k})]);
    ylim(ax_all{k}, 'auto');
end

EasyPlot.cropFigure(fig);
EasyPlot.exportFigure(fig, fullfile(folder, 'MetricsDistribution.png'));
end